
> sid-note@0.1.0 test
> jest --testPathPattern=alias.test.ts --json

{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":22,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":24,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1749445731496,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["getChordNameAliases"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases メジャーコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"メジャーコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases maj7コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"maj7コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases m7コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"m7コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases 7コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"7コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases マイナーコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"マイナーコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases dimコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"dimコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases augコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"augコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases sus4コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sus4コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases add9コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"add9コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases 6コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"6コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases 9コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"9コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases m(maj7)コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"m(maj7)コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases ♯記号を含むコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"♯記号を含むコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases ♭記号を含むコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"♭記号を含むコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["C#"],"expected":["C#","C#maj","C#△"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 2\n+ Received  + 0\n\n  Array [\n    \"C#\",\n-   \"C#maj\",\n-   \"C#△\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 2\n+ Received  + 0\n\n  Array [\n    \"C#\",\n-   \"C#maj\",\n-   \"C#△\",\n  ]\n    at Object.<anonymous> (/workspaces/sid-note/src/utils/music/theory/chord/alias.test.ts:76:21)\n    at Promise.then.completed (/workspaces/sid-note/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspaces/sid-note/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspaces/sid-note/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async _runTest (/workspaces/sid-note/node_modules/jest-circus/build/run.js:252:3)\n    at async _runTestsForDescribeBlock (/workspaces/sid-note/node_modules/jest-circus/build/run.js:126:9)\n    at async _runTestsForDescribeBlock (/workspaces/sid-note/node_modules/jest-circus/build/run.js:121:9)\n    at async run (/workspaces/sid-note/node_modules/jest-circus/build/run.js:71:3)\n    at async runAndTransformResultsToJestFormat (/workspaces/sid-note/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at async jestAdapter (/workspaces/sid-note/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at async runTestInternal (/workspaces/sid-note/node_modules/jest-runner/build/runTest.js:367:16)\n    at async runTest (/workspaces/sid-note/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"getChordNameAliases #記号を含むコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"#記号を含むコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":1,"failureDetails":[{"matcherResult":{"actual":["C♭","C♭maj","C♭△"],"expected":["Cb","Cbmaj","Cb△"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 3\n\n  Array [\n-   \"Cb\",\n-   \"Cbmaj\",\n-   \"Cb△\",\n+   \"C♭\",\n+   \"C♭maj\",\n+   \"C♭△\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 3\n\n  Array [\n-   \"Cb\",\n-   \"Cbmaj\",\n-   \"Cb△\",\n+   \"C♭\",\n+   \"C♭maj\",\n+   \"C♭△\",\n  ]\n    at Object.<anonymous> (/workspaces/sid-note/src/utils/music/theory/chord/alias.test.ts:81:21)\n    at Promise.then.completed (/workspaces/sid-note/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspaces/sid-note/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspaces/sid-note/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async _runTest (/workspaces/sid-note/node_modules/jest-circus/build/run.js:252:3)\n    at async _runTestsForDescribeBlock (/workspaces/sid-note/node_modules/jest-circus/build/run.js:126:9)\n    at async _runTestsForDescribeBlock (/workspaces/sid-note/node_modules/jest-circus/build/run.js:121:9)\n    at async run (/workspaces/sid-note/node_modules/jest-circus/build/run.js:71:3)\n    at async runAndTransformResultsToJestFormat (/workspaces/sid-note/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at async jestAdapter (/workspaces/sid-note/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at async runTestInternal (/workspaces/sid-note/node_modules/jest-runner/build/runTest.js:367:16)\n    at async runTest (/workspaces/sid-note/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"getChordNameAliases b記号を含むコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"b記号を含むコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases 不正なコード名でそのまま返される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"不正なコード名でそのまま返される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases 空文字列でそのまま返される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"空文字列でそのまま返される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases パワーコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"パワーコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases オクターブコードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"オクターブコードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases sus2コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sus2コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases m6コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"m6コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases m9コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"m9コードの別表記が正しく取得される"},{"ancestorTitles":["getChordNameAliases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"getChordNameAliases M9コードの別表記が正しく取得される","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"M9コードの別表記が正しく取得される"}],"endTime":1749445732103,"message":"  ● getChordNameAliases › #記号を含むコードの別表記が正しく取得される\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 2\n    + Received  + 0\n\n      Array [\n        \"C#\",\n    -   \"C#maj\",\n    -   \"C#△\",\n      ]\n\n      74 |   it(\"#記号を含むコードの別表記が正しく取得される\", () => {\n      75 |     const aliases = getChordNameAliases(\"C#\");\n    > 76 |     expect(aliases).toEqual([\"C#\", \"C#maj\", \"C#△\"]);\n         |                     ^\n      77 |   });\n      78 |\n      79 |   it(\"b記号を含むコードの別表記が正しく取得される\", () => {\n\n      at Object.<anonymous> (src/utils/music/theory/chord/alias.test.ts:76:21)\n\n  ● getChordNameAliases › b記号を含むコードの別表記が正しく取得される\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 3\n\n      Array [\n    -   \"Cb\",\n    -   \"Cbmaj\",\n    -   \"Cb△\",\n    +   \"C♭\",\n    +   \"C♭maj\",\n    +   \"C♭△\",\n      ]\n\n      79 |   it(\"b記号を含むコードの別表記が正しく取得される\", () => {\n      80 |     const aliases = getChordNameAliases(\"Cb\");\n    > 81 |     expect(aliases).toEqual([\"Cb\", \"Cbmaj\", \"Cb△\"]);\n         |                     ^\n      82 |   });\n      83 |\n      84 |   it(\"不正なコード名でそのまま返される\", () => {\n\n      at Object.<anonymous> (src/utils/music/theory/chord/alias.test.ts:81:21)\n","name":"/workspaces/sid-note/src/utils/music/theory/chord/alias.test.ts","startTime":1749445731607,"status":"failed","summary":""}],"wasInterrupted":false}
